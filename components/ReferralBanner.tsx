import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';

export const ReferralBanner: React.FC = () => {
  const router = useRouter();
  const [referralCode, setReferralCode] = useState<string | null>(null);
  const [copied, setCopied] = useState(false);

  useEffect(() => {
    // –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    const { ref } = router.query;
    if (ref && typeof ref === 'string') {
      setReferralCode(ref);
    }
  }, [router.query]);

  const copyReferralCode = async () => {
    if (referralCode) {
      try {
        await navigator.clipboard.writeText(referralCode);
        setCopied(true);
        setTimeout(() => setCopied(false), 2000);
      } catch (error) {
        console.error('Failed to copy referral code:', error);
      }
    }
  };

  if (!referralCode) return null;

  return (
    <div className="bg-gradient-to-r from-accent-yellow to-yellow-400 text-black p-4 rounded-lg mb-6">
      <div className="flex items-center justify-between">
        <div className="flex items-center space-x-3">
          <div className="text-2xl">üéÅ</div>
          <div>
            <h3 className="font-bold text-lg">–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!</h3>
            <p className="text-sm opacity-90">
              –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–¥ <span className="font-mono font-bold">{referralCode}</span> –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–æ–≤
            </p>
          </div>
        </div>
        <button
          onClick={copyReferralCode}
          className="px-4 py-2 bg-black text-white rounded-lg hover:bg-gray-800 transition-colors font-semibold"
        >
          {copied ? '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!' : '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å'}
        </button>
      </div>
    </div>
  );
};
